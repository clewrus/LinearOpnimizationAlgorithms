<UserControl x:Class="YakimovTheSimplex.UIElements.SimplexTableControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:YakimovTheSimplex.UIElements"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
	
	<UserControl.Resources>
		<Style x:Key="HighlightErrorStyle" TargetType="TextBox">
			<Style.Triggers>
				<DataTrigger Binding="{Binding DataContext.HasError, RelativeSource={RelativeSource Mode=Self}}" Value="True">
					<Setter Property="Background" Value="Coral"/>
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
	</UserControl.Resources>
	
    <Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<StackPanel Grid.Row="0" Orientation="Horizontal" >
			<TextBlock FontSize="35">L → </TextBlock>
			<ComboBox x:Name="TaskTypeComboBox" FontSize="20" Height="35" SelectionChanged="TaskTypeChanged">
				<ComboBoxItem Selector.IsSelected="True">min</ComboBoxItem>
				<ComboBoxItem>max</ComboBoxItem>
			</ComboBox>
		</StackPanel>
		
		<DockPanel Grid.Row="1" Margin="0, 20, 0, 0">
			<TextBlock DockPanel.Dock="Left"
				Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Mode=Self}}"
				FontSize="35"
			>L=</TextBlock>

			<DockPanel>
				<Button DockPanel.Dock="Left"
					Content="-"
					Width="10"
					BorderThickness="1,1,0,1"
					Click="RemoveCostFunctionVariable"
				/>

				<Border BorderThickness="1" BorderBrush="#FF707070">
					<Grid x:Name="LGrid">
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition/>
							<RowDefinition/>
						</Grid.RowDefinitions>
					</Grid>
				</Border>

				<Button DockPanel.Dock="Right"
					Content="+"
					Width="10"
					BorderThickness="0,1,1,1"
					Click="AddCostFunctionVariable"
				/>
			</DockPanel>

			<StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
				<TextBox DockPanel.Dock="Left"
					Name="constantsPlus"
					FontSize="35"
					
					IsReadOnly="True"
					TextAlignment="Center"
					HorizontalAlignment="Center"
					VerticalContentAlignment="Center"
					Cursor="Arrow"
						 
					BorderThickness="0"
					Width="30"
				> + </TextBox>
				
				<TextBox 
					x:Name="Constant" 
					FontSize="20"
					TextAlignment="Center"
					VerticalContentAlignment="Center"
					VerticalAlignment="Center"
					Height="{Binding ActualHeight, ElementName=constantsPlus}"
					Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}}"
				/>
			</StackPanel>
			
		</DockPanel>

		<StackPanel Grid.Row="2" Orientation="Horizontal" Margin="70,20,0,0">
			<StackPanel Name="ConstrainsTable">
				<Button Margin="-80,0,0,0"
					Height="10"
					BorderThickness="1,1,1,0"
					Content="-"
					Padding="0, -4, 0, 0"
					BorderBrush="DarkGray"
						
				
					Width="{Binding ActualWidth, ElementName=ConstrainBorder}"
					Click="RemoveConstraint"
				/>

				<StackPanel Orientation="Horizontal">
					<Border Name="ConstrainBorder" BorderBrush="DarkGray" BorderThickness="1">
						<Grid x:Name="CGrid" Width="Auto">

						</Grid>
					</Border>

					<TextBox
						BorderThickness="0"
						IsReadOnly="True"
						VerticalContentAlignment="Center"
						FontSize="35"
						Text="="
						Cursor="Arrow"
						Height="{Binding ActualHeight, ElementName=CGrid}"
					/>

					<Border BorderBrush="DarkGray" BorderThickness="1">
						<Grid x:Name="BGrid">
							<Grid.RowDefinitions>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="50"/>
							</Grid.ColumnDefinitions>

							<Border BorderBrush="DarkGray" BorderThickness="1">
								<TextBlock Grid.Row="0" Grid.Column="0" FontSize="15" Background="LightGray" TextAlignment="Center">
									B
								</TextBlock>
							</Border>
						</Grid>
					</Border>
				</StackPanel>

				<Button Margin="-80,0,0,0"
					Height="10"
					BorderThickness="1,0,1,1"
					Content="+"
					Padding="0, -4, 0, 0"
					BorderBrush="DarkGray"
				
					Width="{Binding ActualWidth, ElementName=ConstrainBorder}"
					Click="AddConstraint"
				/>
			</StackPanel>

			
		</StackPanel>

		<DockPanel Grid.Row="3" Margin="0, 20">
			<ToggleButton DockPanel.Dock="Top" IsChecked="False" Visibility="Hidden" x:Name="XSetToggle" Width="100" HorizontalAlignment="Left">
				<ToggleButton.Style>
					<Style TargetType="ToggleButton">
						<Style.Triggers>
							<DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True">
								<Setter Property="Content" Value="Hide discrete set"/>
							</DataTrigger>

							<DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="False">
								<Setter Property="Content" Value="Show discrete set"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</ToggleButton.Style>
				
			</ToggleButton>

			<DockPanel Margin="0,5,0,0" Visibility="{Binding IsChecked, ElementName=XSetToggle, Converter={StaticResource BoolToVisibilityConverter}}">
				<StackPanel DockPanel.Dock="Left" x:Name="xSetLabels"/>
				<StackPanel x:Name="xSet" HorizontalAlignment="Left" />
			</DockPanel>
		</DockPanel>
	</Grid>
</UserControl>
